{"version":3,"sources":["App.js","index.js"],"names":["arrayUsers","id","nickname","email","ipAdress","comfirmDelete","App","state","allUsers","validateError","validate","deleteAll","handleChange","e","_this","setState","Object","defineProperty","target","name","value","handleOnSubmit","preventDefault","_this$state","nicknameError","nicknameValidation","length","includes","i","toLowerCase","emailError","emailValidation","dotValidation","lastIndexOf","ipAdressError","ipAdressValidation","match","newObject","newArray","push","sort","a","b","handleSelectDeleteUser","newArrayUserToDelete","handleDeleteGoBack","handleDeleteUser","newArrayUserFilter","filter","user","handleDeleteAll","prevState","handleSelectDeleteAll","handleNoDeleteAll","_this$state2","this","react_default","createElement","className","App_FormIp","scope","CreateTable","App_DeleteAll","React","Component","FormIp","props","classBorder","concat","Fragment","onSubmit","htmlFor","type","onChange","disabled","map","index","App_CreateUser","key","CreateUser","App_ButtonsToDelete","onClick","ButtonsToDelete","_ref","DeleteAll","_ref2","App_ComfirmeDeleteAll","ComfirmeDeleteAll","_ref3","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.ac3fdcc8.chunk.js","sourcesContent":["import React from 'react';\nimport './style/App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nlet arrayUsers = [\n  {\n    id: 0,\n    nickname: 'Hubert',\n    email: 'mazul96.hm@gmail.com',\n    ipAdress: '0.0.0.0',\n    comfirmDelete: false,\n  },\n\n]\n\nexport default class App extends React.Component {\n  state = {\n    nickname: '',\n    email: '',\n    ipAdress: '',\n    allUsers: arrayUsers,\n    validateError: { nickname: '', email: '', ipAdress: '' },\n    validate: { nickname: false, email: false, ipAdress: false },\n    deleteAll: false,\n  }\n\n\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  handleOnSubmit = e => {\n    e.preventDefault();\n    const { nickname, email, ipAdress } = this.state;\n\n    //NICKNAME\n    let nicknameError = '';\n    let nicknameValidation = false;\n\n    if (nickname.length >= 3) {\n      nicknameError = 'Nickname ok';\n      nicknameValidation = true;\n      if (nickname.includes(' ')) {\n        nicknameError = 'Nie mozna spacji';\n        nicknameValidation = false;\n\n\n\n\n      } else {\n\n        for (let i = 0; i < this.state.allUsers.length; i++) {\n          if (nickname.toLowerCase() === this.state.allUsers[i].nickname.toLowerCase()) {\n            nicknameError = 'Nickname zajęty';\n            nicknameValidation = false;\n          }\n        }\n      }\n\n    } else if (nickname.length === 0) {\n      nicknameError = 'Wpisz nickname';\n      nicknameValidation = false;\n    } else {\n      nicknameError = 'Nickname za krótki';\n      nicknameValidation = false;\n    }\n    //END NICKNAME\n    //EMAIL\n    let emailError = '';\n    let emailValidation = false;\n    const dotValidation = email.lastIndexOf('.');\n\n    if (email.length > 5) {\n      if (email.includes('@')) {\n        if (email.includes('.')) {\n          if (email.length === dotValidation + 3 || email.length === dotValidation + 4) {\n            emailError = 'Email ok';\n            emailValidation = true;\n          } else if (email.length === dotValidation + 2 || email.length > dotValidation + 4) {\n            emailError = 'Zła końcówka'\n            emailValidation = false;\n          } else {\n            emailError = 'Brak końcówki';\n            emailValidation = false;\n          }\n        } else {\n          emailError = 'Brak kropki w adresie email';\n          emailValidation = false;\n        }\n      } else {\n        emailError = 'Brak @ w adresie email';\n        emailValidation = false;\n      }\n\n      for (let i = 0; i < this.state.allUsers.length; i++) {\n        if (email.toLowerCase() === this.state.allUsers[i].email.toLowerCase()) {\n          emailError = 'Email zajęty';\n          emailValidation = false;\n        }\n      }\n    } else if (email.length === 0) {\n      emailError = 'Wpisz Email';\n      emailValidation = false;\n    } else {\n      emailError = 'Email jest za krótki';\n      emailValidation = false;\n    }\n    //END EMAIL\n    //IP ADRESS\n    let ipAdressError = '';\n    let ipAdressValidation = false;\n    const ipformat = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    if (ipAdress.length !== 0) {\n\n      if (ipAdress.match(ipformat)) {\n        ipAdressError = 'IP Adress ok';\n        ipAdressValidation = true;\n\n        for (let i = 0; i < this.state.allUsers.length; i++) {\n          if (ipAdress.toLowerCase() === this.state.allUsers[i].ipAdress.toLowerCase()) {\n            ipAdressError = 'IP zajęty';\n            ipAdressValidation = false;\n          }\n        }\n      } else {\n        ipAdressError = 'Zły format adresu IP';\n      }\n    } else {\n      ipAdressError = 'Wpisz adres IP';\n      ipAdressValidation = false;\n    }\n    //END IP ADRESS\n\n    if (nicknameValidation && emailValidation && ipAdressValidation) {\n      let newObject = {\n        id: arrayUsers.length,\n        nickname: nickname,\n        email: email,\n        ipAdress: ipAdress,\n      }\n\n      let newArray = arrayUsers;\n      newArray.push(newObject);\n      //SORT ARRAY\n      let sort = newArray.sort((a, b) => {\n        return (a.nickname.toLowerCase() > b.nickname.toLowerCase()) ? 1 : -1;\n      });;\n      //END SORT ARRAY\n      this.setState({\n        allUsers: sort,\n        nickname: '',\n        email: '',\n        ipAdress: '',\n        validateError: { nickname: '', email: '', ipAdress: '' },\n        validate: { nickname: nicknameValidation, email: emailValidation, ipAdress: ipAdressValidation },\n      })\n    } else {\n      this.setState({\n        validateError: { nickname: nicknameError, email: emailError, ipAdress: ipAdressError },\n        validate: { nickname: nicknameValidation, email: emailValidation, ipAdress: ipAdressValidation },\n      })\n    }\n  }\n\n  handleSelectDeleteUser = (id) => {\n    let newArrayUserToDelete = arrayUsers;\n    if (newArrayUserToDelete[id].comfirmDelete) {\n      newArrayUserToDelete[id].comfirmDelete = false;\n\n    } else {\n      newArrayUserToDelete[id].comfirmDelete = true;\n    }\n    this.setState({\n      allUsers: newArrayUserToDelete,\n    })\n  }\n\n  handleDeleteGoBack = (id) => {\n    let newArrayUserToDelete = arrayUsers;\n    if (newArrayUserToDelete[id].comfirmDelete) {\n      newArrayUserToDelete[id].comfirmDelete = false;\n\n    } else {\n      newArrayUserToDelete[id].comfirmDelete = true;\n    }\n    this.setState({\n      allUsers: newArrayUserToDelete,\n    })\n  }\n\n  handleDeleteUser = (e, email) => {\n    const newArrayUserFilter = arrayUsers.filter(user => user.email !== email);\n    arrayUsers = newArrayUserFilter;\n    this.setState({\n      allUsers: newArrayUserFilter,\n    })\n  }\n\n\n  handleDeleteAll = () => {\n    arrayUsers = [];\n    this.setState(prevState => ({\n      allUsers: arrayUsers,\n      deleteAll: !prevState.deleteAll,\n    }))\n  }\n\n\n  handleSelectDeleteAll = () => {\n    this.setState(prevState => ({\n      deleteAll: !prevState.deleteAll,\n    }))\n  }\n\n\n  handleNoDeleteAll = () => {\n    this.setState(prevState => ({\n      deleteAll: !prevState.deleteAll,\n    }))\n  }\n\n\n  render() {\n\n    const { ipAdress, email, nickname, validateError, allUsers, deleteAll } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"formIn\">\n          <FormIp\n            nickname={nickname}\n            email={email}\n            ipAdress={ipAdress}\n            handleChange={this.handleChange}\n            handleOnSubmit={this.handleOnSubmit}\n            validateError={validateError}\n\n          />\n        </div>\n        <table className=\"table table-striped table-dark mt-4\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Nickname</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">IP Adress</th>\n              <th scope=\"col\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            {CreateTable(allUsers, this.handleDeleteUser, this.handleSelectDeleteUser, this.handleDeleteGoBack)}\n          </tbody>\n        </table>\n        {/* BUTTON TO DELETE ALL */}\n        {arrayUsers.length !== 0 ?\n          <DeleteAll\n            handleDeleteAll={this.handleDeleteAll}\n            handleSelectDeleteAll={this.handleSelectDeleteAll}\n            deleteAll={deleteAll}\n            handleNoDeleteAll={this.handleNoDeleteAll}\n          />\n          : null\n        }\n      </div>\n    );\n  }\n}\n\n\n\nconst FormIp = props => {\n  const { nickname, email, ipAdress, handleChange, handleOnSubmit, validateError } = props;\n\n  const classBorder = (name) => {\n    if (validateError[name] === '') {\n      return '';\n    } else if (validateError[name].toLowerCase() === `${name.toLowerCase()} ok`) {\n      return 'green';\n    } else {\n      return 'red';\n    }\n  }\n\n  const classIP = () => {\n    if (validateError.ipAdress === '') {\n      return '';\n    } else if (validateError.ipAdress.toLowerCase() === 'ip adress ok') {\n      return 'green';\n    } else {\n      return 'red';\n    }\n  }\n\n  const disabledButton = () => {\n    if (nickname && email && ipAdress) {\n      return false;\n    } else {\n      return true;\n    }\n\n  }\n  return (\n    <>\n      <form onSubmit={handleOnSubmit}>\n        <label htmlFor=\"nickname\" className=\"row\">\n          <div className=\"col-12\">\n            Nickname:\n          </div>\n          <div className=\"col-12\">\n            <input id=\"nickname\" type=\"text\" name={'nickname'} value={nickname} onChange={handleChange} className={classBorder('nickname')} />\n            {validateError.nickname}\n          </div>\n        </label>\n        <label htmlFor=\"email\" className=\"row\">\n          <div className=\"col-12\">\n            Email:\n          </div>\n          <div className=\"col-12\">\n            <input id=\"email\" name={'email'} value={email} onChange={handleChange} className={classBorder('email')} />\n            {validateError.email}\n          </div>\n        </label>\n        <label htmlFor=\"ipAdress\" className=\"row\">\n          <div className=\"col-12\">\n            IP adress:\n          </div>\n          <div className=\"col-12\">\n            <input id=\"ipAdress\" type=\"text\" name={'ipAdress'} value={ipAdress} onChange={handleChange} className={classIP()} />\n            {validateError.ipAdress}\n          </div>\n        </label>\n        <button type=\"submit\" disabled={disabledButton()} className=\"btn btn-dark\">Add user</button>\n      </form>\n\n    </>\n  )\n}\n\nconst CreateTable = (allUsers, handleDeleteUser, handleSelectDeleteUser, handleDeleteGoBack) => {\n  const users = allUsers.map((user, index) =>\n    <CreateUser\n      key={user.id}\n      id={index}\n      nickname={user.nickname}\n      email={user.email}\n      ipAdress={user.ipAdress}\n      handleDeleteUser={handleDeleteUser}\n      handleSelectDeleteUser={handleSelectDeleteUser}\n      comfirmDelete={user.comfirmDelete}\n      handleDeleteGoBack={handleDeleteGoBack}\n    />\n  )\n  return users;\n}\n\nconst CreateUser = props => {\n  const { nickname, email, ipAdress, handleDeleteUser, handleSelectDeleteUser, comfirmDelete, id, handleDeleteGoBack } = props;\n\n  return (\n    <>\n      <tr>\n        <td>{nickname}</td>\n        <td>{email}</td>\n        <td>{ipAdress}</td>\n        <td>\n          {comfirmDelete ?\n            <ButtonsToDelete\n              handleDeleteUser={handleDeleteUser}\n              email={email}\n              id={id}\n              handleDeleteGoBack={handleDeleteGoBack}\n            />\n            : <button onClick={() => handleSelectDeleteUser(id)} className=\"btn btn-secondary bigBtn\">x</button>}\n        </td>\n      </tr>\n\n    </>\n  )\n}\n\n\nconst ButtonsToDelete = ({ email, handleDeleteUser, handleDeleteGoBack, id }) => {\n  return (\n    <>\n      <button onClick={(e) => handleDeleteUser(e, email)} className=\"btn btn-danger\">Yes</button>\n      <button onClick={() => handleDeleteGoBack(id)} className=\"btn btn-danger\">No</button>\n    </>\n  )\n}\n\nconst DeleteAll = ({ handleDeleteAll, handleSelectDeleteAll, deleteAll, handleNoDeleteAll }) => {\n  return (\n    <>\n      {!deleteAll ?\n        <button onClick={() => handleSelectDeleteAll()} className=\"btn btn-dark\">Delete all</button>\n        : <ComfirmeDeleteAll\n          handleDeleteAll={handleDeleteAll}\n          handleNoDeleteAll={handleNoDeleteAll}\n        />}\n    </>\n  )\n}\n\nconst ComfirmeDeleteAll = ({ handleDeleteAll, handleNoDeleteAll }) => {\n  return (\n    <>\n      <button onClick={() => handleDeleteAll()} className=\"btn btn-danger\">Yes</button>\n      <button onClick={() => handleNoDeleteAll()} className=\"btn btn-danger\">No</button>\n    </>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}